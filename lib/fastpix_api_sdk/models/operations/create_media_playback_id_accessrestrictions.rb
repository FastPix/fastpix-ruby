# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module FastpixApiSDK
  module Models
    module Operations
    

      class CreateMediaPlaybackIdAccessRestrictions
        extend T::Sig
        include Crystalline::MetadataFields


        field :domains, T.nilable(Models::Operations::CreateMediaPlaybackIdDomains), { 'format_json': { 'letter_case': ::FastpixApiSDK::Utils.field_name('domains') } }

        field :user_agents, T.nilable(Models::Operations::CreateMediaPlaybackIdUserAgents), { 'format_json': { 'letter_case': ::FastpixApiSDK::Utils.field_name('userAgents') } }

        sig { params(domains: T.nilable(Models::Operations::CreateMediaPlaybackIdDomains), user_agents: T.nilable(Models::Operations::CreateMediaPlaybackIdUserAgents)).void }
        def initialize(domains: nil, user_agents: nil)
          @domains = domains
          @user_agents = user_agents
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @domains == other.domains
          return false unless @user_agents == other.user_agents
          true
        end
      end
    end
  end
end
