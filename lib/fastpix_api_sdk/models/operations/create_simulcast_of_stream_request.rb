# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module FastpixApiSDK
  module Models
    module Operations
    

      class CreateSimulcastOfStreamRequest
        extend T::Sig
        include Crystalline::MetadataFields

        # Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
        field :stream_id, ::String, { 'path_param': { 'field_name': 'streamId', 'style': 'simple', 'explode': false } }

        field :simulcast_request, T.nilable(Models::Components::SimulcastRequest), { 'request': { 'media_type': 'application/json' } }

        sig { params(stream_id: ::String, simulcast_request: T.nilable(Models::Components::SimulcastRequest)).void }
        def initialize(stream_id:, simulcast_request: nil)
          @stream_id = stream_id
          @simulcast_request = simulcast_request
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @stream_id == other.stream_id
          return false unless @simulcast_request == other.simulcast_request
          true
        end
      end
    end
  end
end
