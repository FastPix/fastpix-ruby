# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module FastpixApiSDK
  module Models
    module Operations
    

      class DeleteMediaPlaybackIdRequest
        extend T::Sig
        include Crystalline::MetadataFields

        # Return the universal unique identifier for media which can contain a maximum of 255 characters.
        field :media_id, ::String, { 'path_param': { 'field_name': 'mediaId', 'style': 'simple', 'explode': false } }
        # Return the universal unique identifier for playbacks  which can contain a maximum of 255 characters. 
        field :playback_id, ::String, { 'query_param': { 'field_name': 'playbackId', 'style': 'form', 'explode': true } }

        sig { params(media_id: ::String, playback_id: ::String).void }
        def initialize(media_id:, playback_id:)
          @media_id = media_id
          @playback_id = playback_id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @media_id == other.media_id
          return false unless @playback_id == other.playback_id
          true
        end
      end
    end
  end
end
