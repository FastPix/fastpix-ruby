# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module FastpixApiSDK
  module Models
    module Errors
    

      class Field
        extend T::Sig
        include Crystalline::MetadataFields

        # Displays the specific field associated with the error.
        field :field, T.nilable(::String), { 'format_json': { 'letter_case': ::FastpixApiSDK::Utils.field_name('field') } }
        # A descriptive message providing more details for the error
        field :message, T.nilable(::String), { 'format_json': { 'letter_case': ::FastpixApiSDK::Utils.field_name('message') } }

        sig { params(field: T.nilable(::String), message: T.nilable(::String)).void }
        def initialize(field: nil, message: nil)
          @field = field
          @message = message
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @field == other.field
          return false unless @message == other.message
          true
        end
      end
    end
  end
end
