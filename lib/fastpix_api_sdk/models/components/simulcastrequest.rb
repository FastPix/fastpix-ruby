# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module FastpixApiSDK
  module Models
    module Components
    

      class SimulcastRequest
        extend T::Sig
        include Crystalline::MetadataFields

        # The RTMP hostname, combined with the application name, is crucial for connecting to third-party live streaming services and transmitting the live stream.
        field :url, T.nilable(::String), { 'format_json': { 'letter_case': ::FastpixApiSDK::Utils.field_name('url') } }
        # A unique stream key is generated for streaming, allowing the user to start streaming on any third-party platform using this key.
        field :stream_key, T.nilable(::String), { 'format_json': { 'letter_case': ::FastpixApiSDK::Utils.field_name('streamKey') } }

        sig { params(url: T.nilable(::String), stream_key: T.nilable(::String)).void }
        def initialize(url: nil, stream_key: nil)
          @url = url
          @stream_key = stream_key
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @url == other.url
          return false unless @stream_key == other.stream_key
          true
        end
      end
    end
  end
end
